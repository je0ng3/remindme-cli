// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: schedule.proto

package schedulepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScheduleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Datetime      string                 `protobuf:"bytes,3,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Url           string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Memo          string                 `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleRequest) Reset() {
	*x = ScheduleRequest{}
	mi := &file_schedule_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleRequest) ProtoMessage() {}

func (x *ScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleRequest.ProtoReflect.Descriptor instead.
func (*ScheduleRequest) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{0}
}

func (x *ScheduleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScheduleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ScheduleRequest) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *ScheduleRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ScheduleRequest) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type ScheduleIdx struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Idx           int32                  `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleIdx) Reset() {
	*x = ScheduleIdx{}
	mi := &file_schedule_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleIdx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleIdx) ProtoMessage() {}

func (x *ScheduleIdx) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleIdx.ProtoReflect.Descriptor instead.
func (*ScheduleIdx) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{1}
}

func (x *ScheduleIdx) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

type ScheduleList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schedules     []*ScheduleRequest     `protobuf:"bytes,1,rep,name=schedules,proto3" json:"schedules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleList) Reset() {
	*x = ScheduleList{}
	mi := &file_schedule_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleList) ProtoMessage() {}

func (x *ScheduleList) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleList.ProtoReflect.Descriptor instead.
func (*ScheduleList) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{2}
}

func (x *ScheduleList) GetSchedules() []*ScheduleRequest {
	if x != nil {
		return x.Schedules
	}
	return nil
}

type ScheduleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleResponse) Reset() {
	*x = ScheduleResponse{}
	mi := &file_schedule_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleResponse) ProtoMessage() {}

func (x *ScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleResponse.ProtoReflect.Descriptor instead.
func (*ScheduleResponse) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{3}
}

func (x *ScheduleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_schedule_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{4}
}

var File_schedule_proto protoreflect.FileDescriptor

const file_schedule_proto_rawDesc = "" +
	"\n" +
	"\x0eschedule.proto\x12\bschedule\"y\n" +
	"\x0fScheduleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1a\n" +
	"\bdatetime\x18\x03 \x01(\tR\bdatetime\x12\x10\n" +
	"\x03url\x18\x04 \x01(\tR\x03url\x12\x12\n" +
	"\x04memo\x18\x05 \x01(\tR\x04memo\"\x1f\n" +
	"\vScheduleIdx\x12\x10\n" +
	"\x03idx\x18\x01 \x01(\x05R\x03idx\"G\n" +
	"\fScheduleList\x127\n" +
	"\tschedules\x18\x01 \x03(\v2\x19.schedule.ScheduleRequestR\tschedules\",\n" +
	"\x10ScheduleResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\a\n" +
	"\x05Empty2\xd0\x01\n" +
	"\tScheduler\x12D\n" +
	"\vAddSchedule\x12\x19.schedule.ScheduleRequest\x1a\x1a.schedule.ScheduleResponse\x128\n" +
	"\rListSchedules\x12\x0f.schedule.Empty\x1a\x16.schedule.ScheduleList\x12C\n" +
	"\x0eDeleteSchedule\x12\x15.schedule.ScheduleIdx\x1a\x1a.schedule.ScheduleResponseB\rZ\v/schedulepbb\x06proto3"

var (
	file_schedule_proto_rawDescOnce sync.Once
	file_schedule_proto_rawDescData []byte
)

func file_schedule_proto_rawDescGZIP() []byte {
	file_schedule_proto_rawDescOnce.Do(func() {
		file_schedule_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_schedule_proto_rawDesc), len(file_schedule_proto_rawDesc)))
	})
	return file_schedule_proto_rawDescData
}

var file_schedule_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_schedule_proto_goTypes = []any{
	(*ScheduleRequest)(nil),  // 0: schedule.ScheduleRequest
	(*ScheduleIdx)(nil),      // 1: schedule.ScheduleIdx
	(*ScheduleList)(nil),     // 2: schedule.ScheduleList
	(*ScheduleResponse)(nil), // 3: schedule.ScheduleResponse
	(*Empty)(nil),            // 4: schedule.Empty
}
var file_schedule_proto_depIdxs = []int32{
	0, // 0: schedule.ScheduleList.schedules:type_name -> schedule.ScheduleRequest
	0, // 1: schedule.Scheduler.AddSchedule:input_type -> schedule.ScheduleRequest
	4, // 2: schedule.Scheduler.ListSchedules:input_type -> schedule.Empty
	1, // 3: schedule.Scheduler.DeleteSchedule:input_type -> schedule.ScheduleIdx
	3, // 4: schedule.Scheduler.AddSchedule:output_type -> schedule.ScheduleResponse
	2, // 5: schedule.Scheduler.ListSchedules:output_type -> schedule.ScheduleList
	3, // 6: schedule.Scheduler.DeleteSchedule:output_type -> schedule.ScheduleResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_schedule_proto_init() }
func file_schedule_proto_init() {
	if File_schedule_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_schedule_proto_rawDesc), len(file_schedule_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_schedule_proto_goTypes,
		DependencyIndexes: file_schedule_proto_depIdxs,
		MessageInfos:      file_schedule_proto_msgTypes,
	}.Build()
	File_schedule_proto = out.File
	file_schedule_proto_goTypes = nil
	file_schedule_proto_depIdxs = nil
}
